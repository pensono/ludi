// Generated from src/lib/lang/Ludi.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class LudiLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly T__32 = 33;
	public static readonly T__33 = 34;
	public static readonly T__34 = 35;
	public static readonly IDENTIFIER = 36;
	public static readonly NUMBER = 37;
	public static readonly WS = 38;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'action'", 
                                                            "'('", "','", 
                                                            "')'", "':'", 
                                                            "'trigger'", 
                                                            "'win'", "'loss'", 
                                                            "'setup'", "'kind'", 
                                                            "'state'", "'change'", 
                                                            "'to'", "'set'", 
                                                            "'increase'", 
                                                            "'by'", "'decrease'", 
                                                            "'if'", "'then'", 
                                                            "'end'", "'when'", 
                                                            "'not'", "'!'", 
                                                            "'or'", "'and'", 
                                                            "'='", "'!='", 
                                                            "'>'", "'<'", 
                                                            "'>='", "'<='", 
                                                            "'['", "']'", 
                                                            "'{'", "'}'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             "IDENTIFIER", 
                                                             "NUMBER", "WS" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "IDENTIFIER", "NUMBER", "WS",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, LudiLexer._ATN, LudiLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "Ludi.g4"; }

	public get literalNames(): (string | null)[] { return LudiLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return LudiLexer.symbolicNames; }
	public get ruleNames(): string[] { return LudiLexer.ruleNames; }

	public get serializedATN(): number[] { return LudiLexer._serializedATN; }

	public get channelNames(): string[] { return LudiLexer.channelNames; }

	public get modeNames(): string[] { return LudiLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,38,247,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,1,0,
	1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,
	1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,
	1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,
	11,1,11,1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,
	1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,
	16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,
	1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,
	24,1,24,1,24,1,24,1,25,1,25,1,26,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,
	1,29,1,30,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,5,
	35,217,8,35,10,35,12,35,220,9,35,1,35,4,35,223,8,35,11,35,12,35,224,1,35,
	1,35,5,35,229,8,35,10,35,12,35,232,9,35,3,35,234,8,35,1,36,4,36,237,8,36,
	11,36,12,36,238,1,37,4,37,242,8,37,11,37,12,37,243,1,37,1,37,0,0,38,1,1,
	3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
	31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,
	55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,1,0,4,
	2,0,65,90,97,122,3,0,48,57,65,90,97,122,1,0,48,57,3,0,9,10,13,13,32,32,
	252,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,
	0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,
	0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,
	0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,
	0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,
	0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,
	0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,1,77,1,
	0,0,0,3,84,1,0,0,0,5,86,1,0,0,0,7,88,1,0,0,0,9,90,1,0,0,0,11,92,1,0,0,0,
	13,100,1,0,0,0,15,104,1,0,0,0,17,109,1,0,0,0,19,115,1,0,0,0,21,120,1,0,
	0,0,23,126,1,0,0,0,25,133,1,0,0,0,27,136,1,0,0,0,29,140,1,0,0,0,31,149,
	1,0,0,0,33,152,1,0,0,0,35,161,1,0,0,0,37,164,1,0,0,0,39,169,1,0,0,0,41,
	173,1,0,0,0,43,178,1,0,0,0,45,182,1,0,0,0,47,184,1,0,0,0,49,187,1,0,0,0,
	51,191,1,0,0,0,53,193,1,0,0,0,55,196,1,0,0,0,57,198,1,0,0,0,59,200,1,0,
	0,0,61,203,1,0,0,0,63,206,1,0,0,0,65,208,1,0,0,0,67,210,1,0,0,0,69,212,
	1,0,0,0,71,233,1,0,0,0,73,236,1,0,0,0,75,241,1,0,0,0,77,78,5,97,0,0,78,
	79,5,99,0,0,79,80,5,116,0,0,80,81,5,105,0,0,81,82,5,111,0,0,82,83,5,110,
	0,0,83,2,1,0,0,0,84,85,5,40,0,0,85,4,1,0,0,0,86,87,5,44,0,0,87,6,1,0,0,
	0,88,89,5,41,0,0,89,8,1,0,0,0,90,91,5,58,0,0,91,10,1,0,0,0,92,93,5,116,
	0,0,93,94,5,114,0,0,94,95,5,105,0,0,95,96,5,103,0,0,96,97,5,103,0,0,97,
	98,5,101,0,0,98,99,5,114,0,0,99,12,1,0,0,0,100,101,5,119,0,0,101,102,5,
	105,0,0,102,103,5,110,0,0,103,14,1,0,0,0,104,105,5,108,0,0,105,106,5,111,
	0,0,106,107,5,115,0,0,107,108,5,115,0,0,108,16,1,0,0,0,109,110,5,115,0,
	0,110,111,5,101,0,0,111,112,5,116,0,0,112,113,5,117,0,0,113,114,5,112,0,
	0,114,18,1,0,0,0,115,116,5,107,0,0,116,117,5,105,0,0,117,118,5,110,0,0,
	118,119,5,100,0,0,119,20,1,0,0,0,120,121,5,115,0,0,121,122,5,116,0,0,122,
	123,5,97,0,0,123,124,5,116,0,0,124,125,5,101,0,0,125,22,1,0,0,0,126,127,
	5,99,0,0,127,128,5,104,0,0,128,129,5,97,0,0,129,130,5,110,0,0,130,131,5,
	103,0,0,131,132,5,101,0,0,132,24,1,0,0,0,133,134,5,116,0,0,134,135,5,111,
	0,0,135,26,1,0,0,0,136,137,5,115,0,0,137,138,5,101,0,0,138,139,5,116,0,
	0,139,28,1,0,0,0,140,141,5,105,0,0,141,142,5,110,0,0,142,143,5,99,0,0,143,
	144,5,114,0,0,144,145,5,101,0,0,145,146,5,97,0,0,146,147,5,115,0,0,147,
	148,5,101,0,0,148,30,1,0,0,0,149,150,5,98,0,0,150,151,5,121,0,0,151,32,
	1,0,0,0,152,153,5,100,0,0,153,154,5,101,0,0,154,155,5,99,0,0,155,156,5,
	114,0,0,156,157,5,101,0,0,157,158,5,97,0,0,158,159,5,115,0,0,159,160,5,
	101,0,0,160,34,1,0,0,0,161,162,5,105,0,0,162,163,5,102,0,0,163,36,1,0,0,
	0,164,165,5,116,0,0,165,166,5,104,0,0,166,167,5,101,0,0,167,168,5,110,0,
	0,168,38,1,0,0,0,169,170,5,101,0,0,170,171,5,110,0,0,171,172,5,100,0,0,
	172,40,1,0,0,0,173,174,5,119,0,0,174,175,5,104,0,0,175,176,5,101,0,0,176,
	177,5,110,0,0,177,42,1,0,0,0,178,179,5,110,0,0,179,180,5,111,0,0,180,181,
	5,116,0,0,181,44,1,0,0,0,182,183,5,33,0,0,183,46,1,0,0,0,184,185,5,111,
	0,0,185,186,5,114,0,0,186,48,1,0,0,0,187,188,5,97,0,0,188,189,5,110,0,0,
	189,190,5,100,0,0,190,50,1,0,0,0,191,192,5,61,0,0,192,52,1,0,0,0,193,194,
	5,33,0,0,194,195,5,61,0,0,195,54,1,0,0,0,196,197,5,62,0,0,197,56,1,0,0,
	0,198,199,5,60,0,0,199,58,1,0,0,0,200,201,5,62,0,0,201,202,5,61,0,0,202,
	60,1,0,0,0,203,204,5,60,0,0,204,205,5,61,0,0,205,62,1,0,0,0,206,207,5,91,
	0,0,207,64,1,0,0,0,208,209,5,93,0,0,209,66,1,0,0,0,210,211,5,123,0,0,211,
	68,1,0,0,0,212,213,5,125,0,0,213,70,1,0,0,0,214,218,7,0,0,0,215,217,7,1,
	0,0,216,215,1,0,0,0,217,220,1,0,0,0,218,216,1,0,0,0,218,219,1,0,0,0,219,
	234,1,0,0,0,220,218,1,0,0,0,221,223,7,1,0,0,222,221,1,0,0,0,223,224,1,0,
	0,0,224,222,1,0,0,0,224,225,1,0,0,0,225,226,1,0,0,0,226,230,7,0,0,0,227,
	229,7,1,0,0,228,227,1,0,0,0,229,232,1,0,0,0,230,228,1,0,0,0,230,231,1,0,
	0,0,231,234,1,0,0,0,232,230,1,0,0,0,233,214,1,0,0,0,233,222,1,0,0,0,234,
	72,1,0,0,0,235,237,7,2,0,0,236,235,1,0,0,0,237,238,1,0,0,0,238,236,1,0,
	0,0,238,239,1,0,0,0,239,74,1,0,0,0,240,242,7,3,0,0,241,240,1,0,0,0,242,
	243,1,0,0,0,243,241,1,0,0,0,243,244,1,0,0,0,244,245,1,0,0,0,245,246,6,37,
	0,0,246,76,1,0,0,0,7,0,218,224,230,233,238,243,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!LudiLexer.__ATN) {
			LudiLexer.__ATN = new ATNDeserializer().deserialize(LudiLexer._serializedATN);
		}

		return LudiLexer.__ATN;
	}


	static DecisionsToDFA = LudiLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}